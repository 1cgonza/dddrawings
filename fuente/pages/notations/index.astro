---
import Plantilla from '@/plantillas/Plantilla.astro';
import { getCollection } from 'astro:content';
import { getEntry } from 'astro:content';
import type { ImageMetadata } from 'astro';
import Entrada from '@/componentes/Entrada.astro';

const pagina = await getEntry('paginas', 'notations');
const entradas = await getCollection('notations', ({ data }) => (import.meta.env.PROD ? !data.draft : true)).then(
  (archivos) =>
    archivos.sort((a, b) => {
      return b.data.date.getTime() - a.data.date.getTime();
    })
);
const { Content } = await pagina.render();
const imagenes = import.meta.glob<{ default: ImageMetadata }>('../../imgs/notations/*.{jpeg,jpg,png,gif}');
const interactivas = entradas.filter((entrada) => entrada.data.interactive);
const invertidas = entradas.filter((entrada) => entrada.data.inverted);
const estaticas = entradas.filter((entrada) => !entrada.data.inverted && !entrada.data.interactive);
---

<Plantilla>
  <main role="main" class="with-nav archive notations-archive">
    <header class="page-header">
      <h1 class="page-title">{pagina?.data.title}</h1>
      <div class="page-description"><Content /></div>
    </header>

    <section class="archive-items">
      <h2>Interactive</h2>

      {
        interactivas &&
          interactivas.map((entrada) => {
            return <Entrada coleccion="notations" entrada={entrada} imagenes={imagenes} />;
          })
      }
    </section>

    <section class="archive-items">
      <h2>Notaciones Invertidas</h2>

      {
        invertidas &&
          invertidas.map((entrada) => {
            return <Entrada coleccion="notations" entrada={entrada} imagenes={imagenes} />;
          })
      }
    </section>

    <section class="archive-items">
      <h2>Gallery</h2>

      {
        estaticas &&
          estaticas.map((entrada) => {
            return <Entrada coleccion="notations" entrada={entrada} imagenes={imagenes} />;
          })
      }
    </section>
  </main>
</Plantilla>
