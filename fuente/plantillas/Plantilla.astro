---
import type { Imagen, ImagenSEO } from '@/tipos';
import { getImage } from 'astro:assets';
import { getCollection } from 'astro:content';

interface Props {
  titulo?: string;
  descripcion?: string;
  imagen?: Imagen;
}

const { titulo, descripcion, imagen } = Astro.props;
const paginas = await getCollection('paginas');
const nombreProyecto = 'Data Driven Drawings';
const descripcionGeneral =
  'A site showcasing the practical work of the PhD dissertation "Data Driven Drawings" by Juan Camilo González.';
const { pathname } = Astro.url;
const tituloSEO = titulo ? `${titulo} :: ${nombreProyecto}` : nombreProyecto;
const descripcionSEO = descripcion || descripcionGeneral;
const urlBase = new URL(import.meta.env.BASE_URL, Astro.site);
const urlPagina = new URL(pathname, Astro.site);

/**
 * Procesar Imagen para SEO
 */

const imagenSeo: ImagenSEO = {
  ruta: new URL('perlin-violence-map.jpg', urlBase).toString(),
  ancho: '1200',
  alto: '630',
  formato: 'jpg',
  alt: 'Visualización de violencia en Colombia',
  coleccion: '',
};

if (imagen) {
  const imagenes = import.meta.glob<{ default: ImageMetadata }>('../imgs/**/*.{jpeg,jpg,png,gif}');
  const llaveImg = `../imgs/${imagen.coleccion}/${imagen.ruta}`;

  if (imagenes[llaveImg]) {
    const datosImg = await imagenes[llaveImg]().then((img) => img.default);
    const portada = await getImage({ src: datosImg, format: 'jpeg', quality: 90, width: 1200, height: 630 });
    imagenSeo.ruta = new URL(portada.src, Astro.site).toString();
    imagenSeo.alt = imagen.alt;
    imagenSeo.ancho = portada.options.width ? `${portada.options.width}` : imagenSeo.ancho;
    imagenSeo.alto = portada.options.height ? `${portada.options.height}` : imagenSeo.alto;
    imagenSeo.formato = portada.options.format ? `${portada.options.format}` : imagenSeo.formato;
  }
}
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" href={`${import.meta.env.BASE_URL}favicon.ico`} sizes="16x16" />
    <!-- <link rel="icon" href={`${import.meta.env.BASE_URL}favicon.svg`} type="image/svg+xml" />
    <link rel="icon" href={`${import.meta.env.BASE_URL}apple-touch-icon.png`} /> -->
    <meta name="generator" content={Astro.generator} />
    <link rel="canonical" href={urlPagina} />

    <title>{tituloSEO}</title>
    <meta name="description" content={descripcionSEO} />
    <!-- OpenGraph -->
    <meta property="og:locale" content="en_US" />
    <meta property="og:site_name" content={nombreProyecto} />
    <meta property="og:type" content="website" />
    <meta property="og:url" content={urlPagina} />
    <meta property="og:title" content={tituloSEO} />
    <meta property="og:description" content={descripcionSEO} />
    <meta property="og:image" content={imagenSeo.ruta} />
    <meta property="og:image:type" content={`image/${imagenSeo.formato}`} />
    <meta property="og:image:alt" content={imagenSeo.alt} />
    <meta property="og:image:width" content={`${imagenSeo.ancho}`} />
    <meta property="og:image:height" content={`${imagenSeo.alto}`} />
    <!-- Twitter -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:site" content="@1cgonza" />
    <meta name="twitter:creator" content="@1cgonza" />
    <meta name="twitter:url" content={urlPagina} />
    <meta name="twitter:title" content={tituloSEO} />
    <meta name="twitter:description" content={descripcionSEO} />
    <meta name="twitter:image" content={imagenSeo.ruta} />
    <meta name="twitter:image:alt" content={imagenSeo.alt} />

    {
      import.meta.env.PROD && (
        <Fragment>
          <script is:inline async src="https://www.googletagmanager.com/gtag/js?id=G-MJ5Z46EHVT" />

          <script is:inline>
            window.dataLayer = window.dataLayer || []; function gtag(){dataLayer.push(arguments)}
            gtag('js', new Date()); gtag('config', 'G-MJ5Z46EHVT');
          </script>
        </Fragment>
      )
    }
  </head>

  <body>
    <nav id="site-nav" role="navigation">
      <div id="menu-icon">Menu<span></span></div>
      <ul id="main-nav">
        <li><a class="home" href="/" title="Home">Home</a></li>
        {
          paginas &&
            paginas.map((pagina: { slug: string; data: { title: string } }) => (
              <li>
                <a class={pagina.slug} href={`/${pagina.slug}`}>
                  {pagina.data.title}
                </a>
              </li>
            ))
        }
      </ul>
    </nav>
    <slot />
  </body>
</html>

<script>
  const container = document.querySelector<HTMLElement>('#site-nav');
  const mainNav = document.querySelector<HTMLUListElement>('#main-nav');
  const menuIcon = document.querySelector<HTMLDivElement>('#menu-icon');

  if (container && mainNav && menuIcon) {
    document.onclick = (ev) => {
      const elemento = ev.target as HTMLElement;
      if (menuIcon === elemento || menuIcon.contains(elemento)) {
        mainNav.classList.toggle('open');
        menuIcon.classList.toggle('open');
      } else {
        mainNav.classList.remove('open');
        menuIcon.classList.remove('open');
      }
    };

    if (document.querySelector<HTMLElement>('.with-nav')) {
      container.classList.add('open');
    }
  }
</script>

<style lang="scss" is:global>
  @import '@/scss/estilos.scss';
</style>
